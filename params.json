{
  "name": "jSunPicker",
  "tagline": "A simplified jQuery date and time picker",
  "body": "## Why another Date picker?\r\nThere are numerous date, time pickers out there. However, each of those lack in one way or another. If they are feature-rich, they are bulky. If they are light-weight, they lack features. Some others which looked good are either abandoned or use jQuery UI!  Many lacked semantic declaration (declaring options as element attributes say, `data-` attribute) which is a deal breaker for me as most of my code is dynamically generated. Some good looking ones were so buggy that I wasted more time trying to debug than making use of it. I felt that things could be written simple and still be feature-rich. Thus was born this project.\r\n\r\n## Features\r\njSunPicker has the following features:\r\n* Light-weight - 12kb minified, 4kb gzipped\r\n* Supports datetime, date, time, month and year picker\r\n* Separate date and time formats for display and submit\r\n* Dedicated &hearts; button for current date and time\r\n* Semantic declaration - declare your options as javascript or as `data-` attributes or leave them at defaults\r\n* Supports all output formats and most input formats (to manually enter the date in the input element)\r\n* Date range restrictions - min-date, max-date and disable selected-dates (or ranges)\r\n* Time restrictions - min-time, max-time\r\n* Days restrictions - disable selective days (say, Sat & Sun)\r\n* Standardized date input formats for options \r\n* Customizable Title strings (multi-language support)\r\n* Customizable Start day (Monday can be your first day of the week)\r\n* Inline calendar or trigger from text field or custom icon\r\n* 9 gorgeous themes\r\n\r\n## Dependencies\r\n* [jQuery 1.8+](http://jquery.com/download/) \r\n* [jQuery.mousewheel](https://github.com/brandonaaron/jquery-mousewheel) for time scroll.\r\n\r\n## Usage\r\n### Basic usage with default options\r\n\r\n     $('selector').jSunPicker();\r\n\r\n### Specifying options in Javascript\r\n\r\n     $('selector').jSunPicker({startDay:1, pickerType:'date', displayFormat:'m/d/Y'});\r\n\r\n### Semantic declaration (as selector's `data-` attributes)\r\n**HTML:** Declare the options breaking with hiphens at camel-case characters like below. jQuery converts them to camel-case.\r\n\r\n    <input id='datepicker' data-start-day = '1' data-picker-type = 'date' />\r\n\r\n**JQuery:** Basic markup.  Any undeclared option will be substituted by the default values.\r\n\r\n    $('#datepicker').jSunPicker();\r\n\r\n### Format variables\r\nThis plugin uses specific variables to standardize input and output.  It's a small inconvenience for developers who are used to PHP date formats but keeping this way saves a lot of unnecessary code just to manage format conversions which, in my opinion, the usage doesn't justify the efforts.  You'll get used to this and may even find this easier as you start using more.\r\n\r\nThe following denotes the date and time notations for this script. Mix with the separators for your desired format.\r\n\r\n* `y -` two digit year\r\n* `Y -` four digit year\r\n* `m -` month number without leading zero\r\n* `M -` month number with leading zero\r\n* `t -` month short text\r\n* `T -` month long text\r\n* `d -` date number without leading zero\r\n* `D -` date number with leading zero \r\n* `h -` hours without leading zero\r\n* `H -` hours with leading zero\r\n* `a -` meridian (am/pm)\r\n* `A -` meridian (AM?PM)\r\n* `n -` minutes without leading zero\r\n* `N -` minutes with leading zero\r\n* `s -` seconds without leading zero\r\n* `U -` unix time \r\n* `S -` seconds with leading zero\r\n* `w -` day of the week short (dayShort)\r\n* `W -` day of the week long\r\n* `X -` military time\r\n\r\n**Format example**\r\n\r\n`'W, T d, Y H:N:S A'  - ` &nbsp;&nbsp; translates to: Sunday, February 1, 1903 23:09:59 \r\n\r\n`'d-m-Y'  - ` &nbsp;&nbsp; translates to: 9-2-1975\r\n\r\n-- More usage examples will be created later -- \r\n\r\n## Inspiration\r\nHeavily inspired by [Will_pickdate() by TazSingh (@tazsingh)](http://tazsingh.github.io/will_pickdate/). Thanks TazSingh. I have been using that for more than a year but it has some serious bugs with min-max date restrictions. This has not been updated for a while and I also thought that the code could be lot simpler. So I borrowed the visual and navigation design (it was so beautiful) from that project and wrote my plugin from scratch.\r\n\r\n## Authors and Contributors\r\nRavi Iyer (@sunalive)\r\n\r\n## License\r\n[MIT License](https://tldrlegal.com/license/mit-license). Do whatever you wish.\r\n\r\n## Support or Contact\r\nSubmit a bug if you find any. Fork or create a pull request if you wish to contribute.  Source code is heavily commented for your understanding.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}