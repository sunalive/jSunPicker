{
  "name": "jSunPicker",
  "tagline": "A simplified jQuery date and time picker",
  "body": "## Why another Date picker?\r\nThere are numerous date, time pickers out there. However, each of those lack in one way or another. If they are feature-rich, they are bulky. If they are light-weight, they lack features. Some others which looked good are either abandoned or use jQuery UI!  Many lacked semantic declaration (declaring options as element attributes say, `data-` attribute) which is a deal breaker for me as most of my code is dynamically generated. Some good looking ones were so buggy that I wasted more time trying to debug than making use of it. I felt that things could be written simple and still be feature-rich. Thus was born this project.\r\n\r\n## Features\r\njSunPicker has the following features:\r\n* Light-weight - 12kb minified, 4kb gzipped\r\n* Supports datetime, date, time, month and year picker\r\n* Separate date and time formats for display and submit\r\n* Dedicated &hearts; button for current date and time\r\n* Semantic declaration - declare your options as javascript or as `data-` attributes or leave them at defaults\r\n* Supports all output formats and most input formats (to manually enter the date in the input element)\r\n* Date range restrictions - min-date, max-date and disable selected-dates (or ranges)\r\n* Time restrictions - min-time, max-time\r\n* Days restrictions - disable selective days (say, Sat & Sun)\r\n* Standardized date input formats for options \r\n* Customizable Title strings (multi-language support)\r\n* Customizable Start day (Monday can be your first day of the week)\r\n* Inline calendar or trigger from text field or custom icon\r\n* 9 gorgeous themes\r\n\r\n## Dependencies\r\n* [jQuery 1.8+](http://jquery.com/download/) \r\n* [jQuery.mousewheel](https://github.com/brandonaaron/jquery-mousewheel) for time scroll.\r\n\r\n## Usage\r\n### Basic usage with default options\r\n\r\n     $('selector').jSunPicker();\r\n\r\n### Specifying options in Javascript\r\n\r\n     $('selector').jSunPicker({startDay:1, pickerType:'date', displayFormat:'m/d/Y'});\r\n\r\n### Semantic declaration (as selector's `data-` attributes)\r\n**HTML:** Declare the options breaking with hiphens at camel-case characters like below. jQuery converts them to camel-case.\r\n\r\n    <input id='datepicker' data-start-day = '1' data-picker-type = 'date' />\r\n\r\n**JQuery:** Basic markup.  Any undeclared option will be substituted by the default values.\r\n\r\n    $('#datepicker').jSunPicker();\r\n\r\n## Date Format variables\r\nThis plugin uses specific variables to standardize input and output formats for date and time.  This could be a small inconvenience for developers who are used to PHP date formats but keeping this way saves a lot of unnecessary code just to manage format conversions which in my opinion, is too much flab that the usage levels do not justify the efforts.  You'll get used to this by time and may even find this more convenient as you do.\r\n\r\nThe following denotes the date and time notations for this script. Mix with the separators for your desired format.\r\n\r\n* `y ` - two digit year\r\n* `Y ` - four digit year\r\n* `m ` - month number without leading zero\r\n* `M ` - month number with leading zero\r\n* `t ` - month short text\r\n* `T ` - month long text\r\n* `d ` - date number without leading zero\r\n* `D ` - date number with leading zero \r\n* `h ` - hours without leading zero\r\n* `H ` - hours with leading zero\r\n* `a ` - meridian (am/pm)\r\n* `A ` - meridian (AM?PM)\r\n* `n ` - minutes without leading zero\r\n* `N ` - minutes with leading zero\r\n* `s ` - seconds without leading zero\r\n* `S ` - seconds with leading zero\r\n* `w ` - day of the week short (dayShort)\r\n* `W ` - day of the week long\r\n* `U ` - unix time \r\n* `X ` - military time\r\n\r\n**Format example**\r\n\r\n* `'W, T d, Y H:N:S A'  ` &nbsp;&nbsp; translates to: Sunday, February 1, 1903 23:09:59 \r\n* `'d-m-Y'  ` &nbsp;&nbsp; translates to: 9-2-1975\r\n\r\n## Plugin Options\r\n\r\nOption | Description | Example | Default value\r\n--- | --- | --- | ---\r\n**language** | Should denote the language used. Placeholder for future development, not used as of now  | `language:'en-US'` | `en-US`\r\n**daysTitle** | Days of the week (long text) | `daysTitle:['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']` | English days (Sunday to Saturday) \r\n**monthsTitle** | Months of the year (long text) | `monthsTitle:['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']` | English months (January to December) \r\n**dayShort** | Number of characters from the start of daysTitle for short day names | `dayShort:2` | `2`\r\n**monthShort** | Number of characters from the start of monthsTitle for short month names | `monthShort:3` | `3`\r\n**showIcon** | `path/to/calendar/icon`, to trigger picker on clicking the icon instead of input element | `showIcon:'path/to/icon/'` | `null`\r\n**inline** | jQuery selector for the inline container, be sure to give a unique one. This will make it an inline calendar instead of popup calendar | `inline:'#element-id'` | `null`\r\n**startDay** | Start day of the week, Sunday = 1, Saturday = 7 | `startDay:1` |  `1`\r\n**pickerType** | Denotes the picker type. **_Available types:_** `datetime` (date + month + year + time), `date`, `month`, `year`, `time`. Set the appropriate formats | `pickerType:'date'` | `datetime`\r\n**displayFormat** | Date format for visual display. See the formats section above | `displayFormat:'W, T d, Y H:N:S A'` | `M/D/Y H:N:S`\r\n**outputFormat** | Date format for form submit. See the formats section above | `outputFormat:'D-M-Y'` | `U`\r\n**minDate** | Minimum available date for selection. All dates before this date will be disabled. '[date-string]' in any text format except date first i.e. not like d-m-y or d/mmm/yyyy | `minDate:'09/25/2014 05:12:23 PM'` | `null`\r\n**maxDate** | Maximum available date for selection. All dates after this date will be disabled. Formats same as `minDate` | `maxDate:'2014-09-25 18:34:59'` | `null`\r\n**minTime** | Minimum available time for selection. All times before this time will be invalid. [time] or [date-time] in any text format | `minTime:'4:23:45 AM'` | `null`\r\n**maxTime** | Maximum available time for selection. All times after this time will be invalid. Format same as `minTime` | `maxTime:'06/24/2015 4:23:45 PM'` | `null`\r\n**disabledDays** | Days disabled from selection. Similar to `startDay` (Sun = 1, Sat = 7) separated by commas | `disabledDays:'1,7'` | `null` \r\n**disabledDates** |  Days disabled from selection. Individual dates or date ranges separated by commas. Range dates separated by hyphens | `disabledDates:'2016/03/05,2016/03/10-2016/03/15'` | `null`\r\n**initialDate** | Initial selected date. This date will be selected in the element and the picker by default | `initialDate:'2016/3/14 12:21:23 PM'` | `null`\r\n**onShow** | Trigger a JS function when picker shows up | `onShow:$.noop` | `$.noop`\r\n**onClose** | Trigger a JS function when picker is closed (destroyed) | `onClose:$.noop` | `$.noop` \r\n**onSelect** | Trigger a JS function when a value is selected in the picker | `onSelect:$.noop` | `$.noop`\r\n\r\n\r\n-- More usage examples will be created [here](examples.html) later -- \r\n\r\n## Inspiration\r\nHeavily inspired by [Will_pickdate() by TazSingh (@tazsingh)](http://tazsingh.github.io/will_pickdate/). Thanks TazSingh. I have been using that for more than a year but it has some serious bugs with min-max date restrictions. This has not been updated for a while and I also thought that the code could be lot simpler. So I borrowed the visual and navigation design (it was so beautiful) from that project and wrote my plugin from scratch.\r\n\r\n## Authors and Contributors\r\nRavi Iyer (@sunalive)\r\n\r\n## License\r\n[MIT License](https://tldrlegal.com/license/mit-license). Do whatever you wish.\r\n\r\n## Support or Contact\r\nSubmit a bug if you find any. Fork or create a pull request if you wish to contribute.  Source code is heavily commented for your understanding.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}